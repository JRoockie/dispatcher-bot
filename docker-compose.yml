version: '3'

networks:
  app:
    driver: bridge


#networks:
#  app:
#    driver: bridge
#    ipam:
#      driver: default
#      config:
#        - subnet: 192.168.1.0/24

volumes:
  rabbitmq_data:
  jenkins_home:
  postgres:

services:

  #  nginx:
  #    image: nginx
  #    ports:
  #      - "8080:80"
  #    volumes:
  #      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  postgres:
    image: postgres:14.5
    container_name: postgres
    hostname: postgres
    expose:
      - 5434
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: roockie
      POSTGRES_PASSWORD: 1
      POSTGRES_DB: postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app

  rabbitmq:
    image: rabbitmq:3.11.0-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - 5672
      - 15672
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: roockie
      RABBITMQ_DEFAULT_PASS: password
    command: bash -c "rabbitmq-server && rabbitmqctl add_user roockie password && rabbitmqctl set_user_tags roockie administrator && rabbitmqctl set_permissions -p / roockie '.*' '.*' '.*'"
    restart: unless-stopped
    networks:
      - app

  #  jenkins:
  #    image: jenkins/jenkins:lts
  #    expose:
  #      - 8080
  #    ports:
  #      - "8080:8080"
  #    volumes:
  #      - ./jenkins_home:/var/jenkins_home

  #  ssh-agent:
  #    image: jenkins/ssh-agent
  #    networks:
  #      - app

  #  dispatcher:
  #    #    image: roockie1/dispatcherbot-dispatcher:latest
  #    build:
  #      context: ./dispatcher
  #      dockerfile: ./Dockerfile
  #    container_name: dispatcher
  #    expose:
  #      - 8084
  #    ports:
  #      - "8084:8084"
  #    environment:
  #      server.port: 8084
  #      spring.rabbitmq.host: rabbitmq
  #      spring.rabbitmq.username: roockie
  #      spring.rabbitmq.password: password
  #      spring.rabbitmq.port: 5672
  #      spring.rabbitmq.queues.audio: audio_message_update
  #      spring.rabbitmq.queues.text: text_message_update
  #      spring.rabbitmq.queues.answer: answer_message
  #      spring.rabbitmq.queues.voice: voice_message_update
  #      spring.rabbitmq.queues.button: button_update
  #      bot.name: OlegRecords_bot
  #      bot.token: 5998428609:AAGqaLslPcF-ZLC0YzzL2J85UobZ1o0-ZVY
  #    depends_on:
  #      - rabbitmq
  #      - browser-admin-view
  #      - logic-core
  #    restart: always
  #    networks:
  #      - app

  browser-admin-view:
    image: roockie1/dispatcherbot-browser-admin-view:latest
    #    build:
    #      context: ./browser-admin-view
    #      dockerfile: ./Dockerfile
    container_name: admin-view
    expose:
      - 8086
    ports:
      - "8086:8086"
    environment:
      server.port: 8086
      security.jwt.token.secret-key: secret-key
      spring.datasource.url: jdbc:postgresql://postgres:5432/postgres
      spring.datasource.username: roockie
      spring.datasource.password: 1
      spring.jpa.generate-ddl: true
      spring.jpa.open-in-view: false
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    depends_on:
      - logic-core
      - postgres
    restart: always
    networks:
      - app

  logic-core:
    image: roockie1/dispatcherbot-logic-core:latest
    #    build:
    #      context: ./logic-core
    #      dockerfile: ./Dockerfile
    container_name: logic-core
    expose:
      - 8085
    ports:
      - "8085:8085"
    environment:
      server.port: 8085
      spring.rabbitmq.host: rabbitmq
      spring.rabbitmq.port: 5672
      spring.rabbitmq.username: roockie
      spring.rabbitmq.password: password
      spring.rabbitmq.queues.audio: audio_message_update
      spring.rabbitmq.queues.text: text_message_update
      spring.rabbitmq.queues.answer: answer_message
      spring.rabbitmq.queues.voice: voice_message_update
      spring.rabbitmq.queues.button: button_update
      spring.datasource.url: jdbc:postgresql://postgres:5432/postgres
      spring.datasource.username: roockie
      spring.datasource.password: 1
      spring.jpa.generate-ddl: true
      spring.jpa.open-in-view: false
      bot.token: 5998428609:AAGqaLslPcF-ZLC0YzzL2J85UobZ1o0-ZVY
      service.file_info.uri: https://api.telegram.org/bot{token}/getFile?file_id={fileId}
      service.file_storage.uri: https://api.telegram.org/file/bot{token}/{filePath}
    depends_on:
      - rabbitmq
      - postgres
    restart: always
    networks:
      - app
